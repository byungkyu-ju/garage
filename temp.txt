
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Chapter1Test {

    private Chapter1 chapter1;

    @BeforeEach
    void setUp() {
        chapter1 = new Chapter1();
    }

    @Test
    @DisplayName("AutoBoxing 속도 테스트")
    void measureStreamAutoBoxing() {
        List<Integer> autoBoxing = chapter1.useAutoBoxing(1, 10000000);
        List<Integer> notUseAutoBoxing = chapter1.notUseAutoBoxing(1, 10000000);
        assertEquals(autoBoxing.size(), notUseAutoBoxing.size());
    }

}



import java.util.ArrayList;
import java.util.List;

public class Chapter1 {

    public List<Integer> useAutoBoxing(int start, int end) {
        long startTime = System.currentTimeMillis();
        List<Integer> list = new ArrayList<>();
        for (start = 0; start < end; start++) {
            list.add(start);
        }
        long endTime = System.currentTimeMillis();
        System.out.println("실행 시간 : " + (endTime - startTime));
        return list;
    }

    public List<Integer> notUseAutoBoxing(Integer start, Integer end) {
        long startTime = System.currentTimeMillis();
        List<Integer> list = new ArrayList<>();
        for (start = 0; start < end; start++) {
            list.add(start);
        }
        long endTime = System.currentTimeMillis();
        System.out.println("실행 시간 : " + (endTime - startTime));
        return list;
    }

}


test {
    useJUnitPlatform()
}
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}
